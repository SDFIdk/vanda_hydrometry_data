/*
 * Dmp.Hydro.Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dk.miljoeportal.vandah.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import dk.miljoeportal.vandah.model.DmpHydroApiRequestsLocation;
import dk.miljoeportal.vandah.model.DmpHydroApiRequestsStationIdentifier;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * DmpHydroApiRequestsUpdateMeasurementPointRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T14:15:50.310248991+02:00[Europe/Copenhagen]")

public class DmpHydroApiRequestsUpdateMeasurementPointRequest {
  @JsonProperty("station")
  private DmpHydroApiRequestsStationIdentifier station = null;

  @JsonProperty("number")
  private Integer number = null;

  @JsonProperty("measurementPointTypeSc")
  private Integer measurementPointTypeSc = null;

  @JsonProperty("location")
  private DmpHydroApiRequestsLocation location = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("intakeNumber")
  private Integer intakeNumber = null;

  public DmpHydroApiRequestsUpdateMeasurementPointRequest station(DmpHydroApiRequestsStationIdentifier station) {
    this.station = station;
    return this;
  }

   /**
   * Get station
   * @return station
  **/
  @Schema(required = true, description = "")
  public DmpHydroApiRequestsStationIdentifier getStation() {
    return station;
  }

  public void setStation(DmpHydroApiRequestsStationIdentifier station) {
    this.station = station;
  }

  public DmpHydroApiRequestsUpdateMeasurementPointRequest number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Measurement point number
   * @return number
  **/
  @Schema(required = true, description = "Measurement point number")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public DmpHydroApiRequestsUpdateMeasurementPointRequest measurementPointTypeSc(Integer measurementPointTypeSc) {
    this.measurementPointTypeSc = measurementPointTypeSc;
    return this;
  }

   /**
   * Measurement point type stancode, a subset of stancode list 1002
   * @return measurementPointTypeSc
  **/
  @Schema(required = true, description = "Measurement point type stancode, a subset of stancode list 1002")
  public Integer getMeasurementPointTypeSc() {
    return measurementPointTypeSc;
  }

  public void setMeasurementPointTypeSc(Integer measurementPointTypeSc) {
    this.measurementPointTypeSc = measurementPointTypeSc;
  }

  public DmpHydroApiRequestsUpdateMeasurementPointRequest location(DmpHydroApiRequestsLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(required = true, description = "")
  public DmpHydroApiRequestsLocation getLocation() {
    return location;
  }

  public void setLocation(DmpHydroApiRequestsLocation location) {
    this.location = location;
  }

  public DmpHydroApiRequestsUpdateMeasurementPointRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Measurement point name
   * @return name
  **/
  @Schema(required = true, description = "Measurement point name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DmpHydroApiRequestsUpdateMeasurementPointRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Measurement point description
   * @return description
  **/
  @Schema(description = "Measurement point description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DmpHydroApiRequestsUpdateMeasurementPointRequest intakeNumber(Integer intakeNumber) {
    this.intakeNumber = intakeNumber;
    return this;
  }

   /**
   * Intake number of Grundvand station
   * @return intakeNumber
  **/
  @Schema(description = "Intake number of Grundvand station")
  public Integer getIntakeNumber() {
    return intakeNumber;
  }

  public void setIntakeNumber(Integer intakeNumber) {
    this.intakeNumber = intakeNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DmpHydroApiRequestsUpdateMeasurementPointRequest dmpHydroApiRequestsUpdateMeasurementPointRequest = (DmpHydroApiRequestsUpdateMeasurementPointRequest) o;
    return Objects.equals(this.station, dmpHydroApiRequestsUpdateMeasurementPointRequest.station) &&
        Objects.equals(this.number, dmpHydroApiRequestsUpdateMeasurementPointRequest.number) &&
        Objects.equals(this.measurementPointTypeSc, dmpHydroApiRequestsUpdateMeasurementPointRequest.measurementPointTypeSc) &&
        Objects.equals(this.location, dmpHydroApiRequestsUpdateMeasurementPointRequest.location) &&
        Objects.equals(this.name, dmpHydroApiRequestsUpdateMeasurementPointRequest.name) &&
        Objects.equals(this.description, dmpHydroApiRequestsUpdateMeasurementPointRequest.description) &&
        Objects.equals(this.intakeNumber, dmpHydroApiRequestsUpdateMeasurementPointRequest.intakeNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(station, number, measurementPointTypeSc, location, name, description, intakeNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DmpHydroApiRequestsUpdateMeasurementPointRequest {\n");
    
    sb.append("    station: ").append(toIndentedString(station)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    measurementPointTypeSc: ").append(toIndentedString(measurementPointTypeSc)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    intakeNumber: ").append(toIndentedString(intakeNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
