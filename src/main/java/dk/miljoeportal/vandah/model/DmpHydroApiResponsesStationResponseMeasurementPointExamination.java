/*
 * Dmp.Hydro.Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dk.miljoeportal.vandah.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Date;
/**
 * DmpHydroApiResponsesStationResponseMeasurementPointExamination
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T14:15:50.310248991+02:00[Europe/Copenhagen]")

public class DmpHydroApiResponsesStationResponseMeasurementPointExamination {
  @JsonProperty("parameter")
  private String parameter = null;

  @JsonProperty("parameterSc")
  private Integer parameterSc = null;

  @JsonProperty("examinationType")
  private String examinationType = null;

  @JsonProperty("examinationTypeSc")
  private Integer examinationTypeSc = null;

  @JsonProperty("unit")
  private String unit = null;

  @JsonProperty("unitSc")
  private Integer unitSc = null;

  @JsonProperty("firstResult")
  private Date firstResult = null;

  @JsonProperty("latestResult")
  private Date latestResult = null;

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination parameter(String parameter) {
    this.parameter = parameter;
    return this;
  }

   /**
   * Parameter name
   * @return parameter
  **/
  @Schema(description = "Parameter name")
  public String getParameter() {
    return parameter;
  }

  public void setParameter(String parameter) {
    this.parameter = parameter;
  }

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination parameterSc(Integer parameterSc) {
    this.parameterSc = parameterSc;
    return this;
  }

   /**
   * Parameter stancode
   * @return parameterSc
  **/
  @Schema(description = "Parameter stancode")
  public Integer getParameterSc() {
    return parameterSc;
  }

  public void setParameterSc(Integer parameterSc) {
    this.parameterSc = parameterSc;
  }

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination examinationType(String examinationType) {
    this.examinationType = examinationType;
    return this;
  }

   /**
   * Examination type name
   * @return examinationType
  **/
  @Schema(description = "Examination type name")
  public String getExaminationType() {
    return examinationType;
  }

  public void setExaminationType(String examinationType) {
    this.examinationType = examinationType;
  }

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination examinationTypeSc(Integer examinationTypeSc) {
    this.examinationTypeSc = examinationTypeSc;
    return this;
  }

   /**
   * Examination type stancode
   * @return examinationTypeSc
  **/
  @Schema(description = "Examination type stancode")
  public Integer getExaminationTypeSc() {
    return examinationTypeSc;
  }

  public void setExaminationTypeSc(Integer examinationTypeSc) {
    this.examinationTypeSc = examinationTypeSc;
  }

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Unit name
   * @return unit
  **/
  @Schema(description = "Unit name")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination unitSc(Integer unitSc) {
    this.unitSc = unitSc;
    return this;
  }

   /**
   * Unit stancode
   * @return unitSc
  **/
  @Schema(description = "Unit stancode")
  public Integer getUnitSc() {
    return unitSc;
  }

  public void setUnitSc(Integer unitSc) {
    this.unitSc = unitSc;
  }

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination firstResult(Date firstResult) {
    this.firstResult = firstResult;
    return this;
  }

   /**
   * A time when the first result was measured
   * @return firstResult
  **/
  @Schema(description = "A time when the first result was measured")
  public Date getFirstResult() {
    return firstResult;
  }

  public void setFirstResult(Date firstResult) {
    this.firstResult = firstResult;
  }

  public DmpHydroApiResponsesStationResponseMeasurementPointExamination latestResult(Date latestResult) {
    this.latestResult = latestResult;
    return this;
  }

   /**
   * A time when the last result was measured
   * @return latestResult
  **/
  @Schema(description = "A time when the last result was measured")
  public Date getLatestResult() {
    return latestResult;
  }

  public void setLatestResult(Date latestResult) {
    this.latestResult = latestResult;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DmpHydroApiResponsesStationResponseMeasurementPointExamination dmpHydroApiResponsesStationResponseMeasurementPointExamination = (DmpHydroApiResponsesStationResponseMeasurementPointExamination) o;
    return Objects.equals(this.parameter, dmpHydroApiResponsesStationResponseMeasurementPointExamination.parameter) &&
        Objects.equals(this.parameterSc, dmpHydroApiResponsesStationResponseMeasurementPointExamination.parameterSc) &&
        Objects.equals(this.examinationType, dmpHydroApiResponsesStationResponseMeasurementPointExamination.examinationType) &&
        Objects.equals(this.examinationTypeSc, dmpHydroApiResponsesStationResponseMeasurementPointExamination.examinationTypeSc) &&
        Objects.equals(this.unit, dmpHydroApiResponsesStationResponseMeasurementPointExamination.unit) &&
        Objects.equals(this.unitSc, dmpHydroApiResponsesStationResponseMeasurementPointExamination.unitSc) &&
        Objects.equals(this.firstResult, dmpHydroApiResponsesStationResponseMeasurementPointExamination.firstResult) &&
        Objects.equals(this.latestResult, dmpHydroApiResponsesStationResponseMeasurementPointExamination.latestResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parameter, parameterSc, examinationType, examinationTypeSc, unit, unitSc, firstResult, latestResult);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DmpHydroApiResponsesStationResponseMeasurementPointExamination {\n");
    
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    parameterSc: ").append(toIndentedString(parameterSc)).append("\n");
    sb.append("    examinationType: ").append(toIndentedString(examinationType)).append("\n");
    sb.append("    examinationTypeSc: ").append(toIndentedString(examinationTypeSc)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    unitSc: ").append(toIndentedString(unitSc)).append("\n");
    sb.append("    firstResult: ").append(toIndentedString(firstResult)).append("\n");
    sb.append("    latestResult: ").append(toIndentedString(latestResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
